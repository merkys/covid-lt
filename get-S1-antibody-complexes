#!/usr/bin/python3

import json
import requests

query_json = """
{
  "query": {
    "type": "group",
    "nodes": [
      {
        "type": "terminal",
        "service": "text",
        "parameters": {
          "attribute": "rcsb_polymer_entity.pdbx_description",
          "operator": "contains_phrase",
          "value": "Spike protein S1"
        }
      },
      {
        "type": "terminal",
        "service": "full_text",
        "parameters": {
          "value": "antibody"
        }
      }
    ],
    "logical_operator": "and"
  },
  "return_type": "entry",
  "request_options": {
    "pager": {
      "start": 0,
      "rows": 25
    },
    "scoring_strategy": "combined",
    "sort": [
      {
        "sort_by": "score",
        "direction": "desc"
      }
    ]
  }
}
"""

rows_available = None
rows_got = 0

while rows_available is None or rows_got < rows_available:
    query_struct = json.loads(query_json)
    query_struct['request_options']['pager']['start'] = rows_got
    response = requests.get('https://search.rcsb.org/rcsbsearch/v1/query',
                            params = { 'json': json.dumps(query_struct) })
    response_json = response.json()
    if rows_available is None:
        rows_available = response_json['total_count']
    rows_got += query_struct['request_options']['pager']['rows']
    for entry in response_json['result_set']:
        print(entry['identifier'])
