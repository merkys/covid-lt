#!/bin/bash

INPUT_PDB=
INPUT_RTF= # topology
INPUT_PRM= # parameters

GBSA=
PBEQ=
PBEQ_DCEL=1.0
SEQUENCE_FROM_SEQRES=

while [ $# -gt 0 ]
do
    case $1 in
        -t|--topology|--topo|--top)
            INPUT_RTF="$2"
            shift
            ;;
        -p|--parameters|--param|--par|--prm)
            INPUT_PRM="$2"
            shift
            ;;
        --gbsa)
            GBSA=1
            ;;
        --pbeq)
            PBEQ=1
            ;;
        --pbeq-dcel)
            PBEQ_DCEL="$2"
            shift
            ;;
        --sequence-from-seqres)
            SEQUENCE_FROM_SEQRES="$2"
            shift
            ;;
        -*) echo "`basename $0`: unknown option $1" >&2 ; exit 1 ;;
        *)
            test -z "$INPUT_PDB" && INPUT_PDB=$1
            ;;
    esac
    shift
done

if [ -z "$INPUT_PDB" -o -z "$INPUT_RTF" -o -z "$INPUT_PRM" ]
then
    echo "`basename $0`: either input PDB, or topology, or parameters are missing" >&2
    exit 1
fi

RTF_BASE=$(basename $INPUT_RTF)
PRM_BASE=$(basename $INPUT_PRM)

TMPDIR=$(mktemp --directory)

cp $INPUT_RTF $INPUT_PRM $TMPDIR/
sed 's/HIS/HSD/g' $INPUT_PDB > $TMPDIR/input.pdb

cat > $TMPDIR/energy.inp <<ENDSCRIPT
!Taken from https://www.charmm.org/wiki//index.php/CHARMM:The_Basics
!Read in RTF and Parameter files
OPEN UNIT 1 CARD READ NAME $RTF_BASE
READ RTF CARD UNIT 1
CLOSE UNIT 1

OPEN UNIT 1 CARD READ NAME $PRM_BASE
READ PARA CARD UNIT 1
CLOSE UNIT 1

ENDSCRIPT

if test -n "$SEQUENCE_FROM_SEQRES"
then
    cat $SEQUENCE_FROM_SEQRES > $TMPDIR/seqres.pdb
    for CHAIN in $(grep ^ATOM $TMPDIR/seqres.pdb | pdb_chains)
    do
        echo read sequence card >> $TMPDIR/energy.inp
        grep ^SEQRES $TMPDIR/seqres.pdb | cut -c 12- | grep ^$CHAIN | cut -c 3-6 | head -n 1 >> $TMPDIR/energy.inp
        grep ^SEQRES $TMPDIR/seqres.pdb | cut -c 12- | grep ^$CHAIN | cut -c 9-  | sed 's/HIS/HSD/g' >> $TMPDIR/energy.inp
        echo generate $CHAIN setup >> $TMPDIR/energy.inp
        echo >> $TMPDIR/energy.inp
    done
else
    cat >> $TMPDIR/energy.inp <<ENDSCRIPT
OPEN UNIT 1 CARD READ NAME input.pdb
READ SEQU PDB UNIT 1
CLOSE UNIT 1

!Time for CHARMM to make the Internal Coordinates table
GENErate A SETUp

ENDSCRIPT
fi

cat >> $TMPDIR/energy.inp <<ENDSCRIPT
OPEN UNIT 1 CARD READ NAME input.pdb
READ COOR PDB UNIT 1
CLOSE UNIT 1

!Involves known atomic coordinates and fills in missing coordinates
IC FILL

!Will retrieve standard coordinates from the parameter file
IC PARAmeters

!Will find the Cartesian coordinates previously unknown
IC BUILd

!Rebuild all hydrogen coordinates
HBUILD SELEct HYDRogen END

!Check for remaining missing atoms
PRINt COOR SELEct .NOT. INITialized END
ENDSCRIPT

test -n "$GBSA" && echo GBorn gbneck igb=1 epsin=2 epsout=80 >> $TMPDIR/energy.inp

echo ENERgy >> $TMPDIR/energy.inp

if [ -n "$PBEQ" ]
then

# PBEQ module is described in https://academiccharmm.org/documentation/version/c47b2/pbeq
# More about solvation is described in http://charmm.sunhwanj.com/html/pbeq.html

cat >> $TMPDIR/energy.inp <<ENDSCRIPT
PBEQ
    scalar wmain = radius

    SOLVE epsw 80 epsp 2 -
        dcel $PBEQ_DCEL -
ENDSCRIPT

bin/pbeq-mesh $TMPDIR/input.pdb $PBEQ_DCEL >> $TMPDIR/energy.inp

cat >> $TMPDIR/energy.inp <<ENDSCRIPT
    set ener80 = ?ENPB

    CALC total = @ener80

    RESET
END
ENDSCRIPT
fi

echo STOP >> $TMPDIR/energy.inp

(
    cd $TMPDIR
    charmm < energy.inp
)

rm -rf $TMPDIR
