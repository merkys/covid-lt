#!/bin/bash

PDB_IDS=
CONTACTS_WITH=
FILTER=.

PDB_INPUT_DIR=./
OUTPUT_DIR=./

MERGE_ANTIBODY_CHAINS=false
OUTPUT_VALUES=dist-min

while [ $# -gt 0 ]
do
    case $1 in
        --filter)
            FILTER=$2
            shift
            ;;
        --contacts-with)
            CONTACTS_WITH=$2
            shift
            ;;
        --merge-antibody-chains)
            MERGE_ANTIBODY_CHAINS=true
            ;;
        --pdb-input-dir)
            PDB_INPUT_DIR=$2
            shift
            ;;
        --output-dir)
            OUTPUT_DIR=$2
            shift
            ;;
        -*)
            echo "`basename $0`:: ERROR, unknown option '$1'." >&2
            exit 1
            ;;
        *)
            PDB_IDS="${PDB_IDS} $1"
            ;;
    esac
    shift
done

TMP_DIR=$(mktemp --directory)

function chain_contacts() {
    S1_CHAIN=$1
    OTHER_CHAIN=$2

    cat ${OUTPUT_DIR}propka/${PDB_ID}.tab ${OUTPUT_DIR}pdb/P0DTC2/vorocontacts/${PDB_ID}.tab \
        | bin/select-contacts --chain ${S1_CHAIN} --exclude-self --merge ${OUTPUT_VALUES} \
        | grep "${FILTER}" \
        | while read C1 R1 C2 R2 VALUE
          do
            # Exclude other chains
            echo "${OTHER_CHAIN}" | grep --silent -e "${C1}" -e "${C2}" || continue

            # S1 chain may be either on first or on second column
            if [ "${C1}" = "${S1_CHAIN}" ]
            then
                echo -e "${R1}\t${VALUE}"
            else
                echo -e "${R2}\t${VALUE}"
            fi
          done \
        | sort -nk1.1 \
        | python3 -c '
import re, sys
residues = {}
for line in sys.stdin:
    match = re.match("(\d+)\t(\S+)", line)
    if not match:
        continue
    residue = int(match.group(1))
    dist = float(match.group(2))
    if residue not in residues or dist < residues[residue]:
        residues[residue] = dist
for i in range(1, 1500): # Assuming S1 is max. 1500 aminoacids long
    if i in residues:
        print(residues[i])
    else:
        print("?")
        ' > "${TMP_DIR}/column.tab"
}

for PDB_ID in ${PDB_IDS}
do
    S1_CHAINS=
    ANTIBODY_CHAINS=

    if [ -n "${CONTACTS_WITH}" ]
    then
        # Select all S1 chains
        S1_CHAINS="$(bin/pdb_compounds ${PDB_INPUT_DIR}/${PDB_ID}.pdb --hmmsearch alignments/pdb_seqres-PF09408.hmmsearch | grep PF09408 | cut -f 2 | xargs | sed 's/ //g')"
        # Selecting antibody chains
        ANTIBODY_CHAINS="$(bin/pdb_compounds ${PDB_INPUT_DIR}/${PDB_ID}.pdb --hmmsearch "${CONTACTS_WITH}" | grep -F "${CONTACTS_WITH}" | cut -f 2 | xargs | sed 's/ //g')"
    else
        # Detect complex using bin/contact-graph
        COMPLEX=$(PYTHONPATH=. bin/contact-graph ${OUTPUT_DIR}pdb/P0DTC2/vorocontacts/${PDB_ID}.tab --pdb ${OUTPUT_DIR}pdb/P0DTC2/${PDB_ID}.pdb --output-complexes --most-contacts | grep -v ^Limiting)
        S1_CHAINS=$(echo ${COMPLEX} | cut -c 1)
        ANTIBODY_CHAINS=$(echo ${COMPLEX} | cut -c 2-)
    fi

    # Next if no S1 chains found
    test -z "${S1_CHAINS}" && continue
    # Next if no antibody chains found
    test -z "${ANTIBODY_CHAINS}" && continue

    for S1_CHAIN in $(echo "${S1_CHAINS}" | grep -o .)
    do
        if $MERGE_ANTIBODY_CHAINS
        then
            chain_contacts ${S1_CHAIN} ${ANTIBODY_CHAINS}
            if grep --silent . "${TMP_DIR}/column.tab"
            then
                echo ${PDB_ID}_${S1_CHAIN}${ANTIBODY_CHAINS} | cat - "${TMP_DIR}/column.tab" | sponge "${TMP_DIR}/column.tab"
                if test -e "${TMP_DIR}/output.tab"
                then
                    paste "${TMP_DIR}/output.tab" "${TMP_DIR}/column.tab" | sponge "${TMP_DIR}/output.tab"
                else
                    mv "${TMP_DIR}/column.tab" "${TMP_DIR}/output.tab"
                fi
            fi
        else
            for OTHER_CHAIN in $(cat ${OUTPUT_DIR}propka/${PDB_ID}.tab ${OUTPUT_DIR}pdb/P0DTC2/vorocontacts/${PDB_ID}.tab | bin/select-contacts --chain ${S1_CHAIN} --contacting-chains --exclude-self | grep ^${S1_CHAIN} | sed 's/,/ /g')
            do
                # Ignore non-antibody chains
                echo ${OTHER_CHAIN} | grep --silent "[${ANTIBODY_CHAINS}]" || continue

                chain_contacts ${S1_CHAIN} ${OTHER_CHAIN}

                if grep --silent . "${TMP_DIR}/column.tab"
                then
                    echo ${PDB_ID}_${S1_CHAIN}${OTHER_CHAIN} | cat - "${TMP_DIR}/column.tab" | sponge "${TMP_DIR}/column.tab"
                    if test -e "${TMP_DIR}/output.tab"
                    then
                        paste "${TMP_DIR}/output.tab" "${TMP_DIR}/column.tab" | sponge "${TMP_DIR}/output.tab"
                    else
                        mv "${TMP_DIR}/column.tab" "${TMP_DIR}/output.tab"
                    fi
                fi
            done
        fi
    done
done

test -e "${TMP_DIR}/output.tab" && cat "${TMP_DIR}/output.tab"
rm -rf "${TMP_DIR}"
