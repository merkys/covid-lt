#!/bin/bash

PDB_IDS=
FILTER=.

while [ $# -gt 0 ]
do
    if [ "$1" = "--filter" ]
    then
        FILTER=$2
        shift
    else
        PDB_IDS="${PDB_IDS} $1"
    fi
    shift
done

TMP_DIR=$(mktemp --directory)

for PDB_ID in ${PDB_IDS}
do
    # Taking only the first of S1 chains
    S1_CHAIN=$(bin/pdb_compounds pdb/pristine/${PDB_ID}.pdb --hmmsearch pdb_seqres-PF09408.hmmsearch | grep PF09408 | head -n1 | cut -f 2)

    # Next if no S1 chains found
    test -z "${S1_CHAIN}" && continue

    # Selecting antibody chains
    ANTIBODY_CHAINS="$(bin/pdb_compounds pdb/pristine/${PDB_ID}.pdb --hmmsearch pdb_seqres-PF07654.hmmsearch | grep PF07654 | cut -f 2 | xargs | sed 's/ //g')"

    # Next if no antibody chains found
    test -z "${ANTIBODY_CHAINS}" && continue

    cat propka/${PDB_ID}.tab vorocontacts/${PDB_ID}.tab \
        | bin/select-contacts --chain ${S1_CHAIN} --exclude-self --dist min \
        | grep "${FILTER}" \
        | while read C1 R1 C2 R2 DIST
          do
            # Ignore non-antibody chains
            echo ${C1} ${C2} | grep --silent "[${ANTIBODY_CHAINS}]" || continue

            # S1 chain may be either on first or on second column
            if [ "${C1}" = "${S1_CHAIN}" ]
            then
                echo -e "${R1}\t${DIST}"
            else
                echo -e "${R2}\t${DIST}"
            fi
          done \
        | sort -nk1.1 \
        | python3 -c '
import re, sys
residues = {}
for line in sys.stdin:
    match = re.match("(\d+)\t(\S+)", line)
    if not match:
        continue
    residue = int(match.group(1))
    dist = float(match.group(2))
    if residue not in residues or dist < residues[residue]:
        residues[residue] = dist
for i in range(1, 1500): # Assuming S1 is max. 1500 aminoacids long
    if i in residues:
        print(residues[i])
    else:
        print("?")
          ' > "${TMP_DIR}/column.tab"

    if grep --silent . "${TMP_DIR}/column.tab"
    then
        echo $PDB_ID | cat - "${TMP_DIR}/column.tab" | sponge "${TMP_DIR}/column.tab"
        if test -e "${TMP_DIR}/output.tab"
        then
            paste "${TMP_DIR}/output.tab" "${TMP_DIR}/column.tab" | sponge "${TMP_DIR}/output.tab"
        else
            mv "${TMP_DIR}/column.tab" "${TMP_DIR}/output.tab"
        fi
    fi

done

cat "${TMP_DIR}/output.tab"
rm -rf "${TMP_DIR}"
