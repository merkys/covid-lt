#!/usr/bin/env python3

# Align peptide sequences in ATOM records to the sequences in SEQRES records.
# Sometimes they may be off and need to be adjusted in case the further processing software is unable to do that.
# For example, Jackal does the alignment (plain renumbering starting from 1?) on its own, but does not renumber LINK and SSBOND records.
# In particular:
# - PDB 7AKJ record, chain C. Processing it with Jackal leaves SSBOND pointing to a missing residue.
# - PDB 6NB4 record, interaction between 104:A and 1:D. Jackal looses LINK record which is important.

# TODO: Implement an alternative solution using seq.alg.AlignToSEQRES() from OpenStructure:
# https://openstructure.org/docs/2.3.1/seq/alg/seqalg/

from Bio import pairwise2
from pdbio.pdbfile import PDBFile
import sys

files = sys.argv[1:]
if len(files) == 0:
    files = [sys.stdin]

pdb = PDBFile(files[0]) # for now

for chain in pdb:
    atom_seq = chain.sequence_atom()
    seqres_seq = chain.sequence_seqres() # TODO: Check if not None

    # FIXME: Maybe globalxx() does not have the best scoring parameters.
    align = pairwise2.align.globalxx(atom_seq.replace('X', '-'), seqres_seq.replace('X', '-'), one_alignment_only=True)[0]

    atom_seq_aligned = list(align[0])
    seqres_seq_aligned = list(align[1])
    pos = 0
    while pos < len(atom_seq_aligned):
        if atom_seq_aligned[pos] == '-' and seqres_seq_aligned[pos] == '-':
            atom_seq_aligned.pop(pos)
            seqres_seq_aligned.pop(pos)
        pos += 1

    atom_pos = -1
    seqres_pos = -1
    last_insertion_code = ' '
    alignment = []
    for pos, _ in enumerate(atom_seq_aligned):
        if atom_seq_aligned[pos] != '-':
            atom_pos += 1
        if seqres_seq_aligned[pos] != '-':
            seqres_pos += 1
        if atom_seq_aligned[pos] != '-' and seqres_seq_aligned[pos] != '-':
            alignment.append((seqres_pos, ' '))
            last_insertion_code = ' '
        elif atom_seq_aligned[pos] != '-': # insertion with alternative locator
            if last_insertion_code == ' ':
                last_insertion_code = 'A'
            else:
                last_insertion_code = chr(ord(last_insertion_code)+1)
            alignment.append((seqres_pos, last_insertion_code))
        elif seqres_seq_aligned[pos] != '-': # deletion, missing residue
            pass # Nothing to do here

    residues_seen = 0
    residue_index = {}
    for residue in chain:
        residue_index[str(residue.number()) + residue.icode()] = residues_seen
        residues_seen += 1

    def renumber(orig_chain, number, icode):
        if orig_chain != chain.name:
            return None, None, None
        index = residue_index[str(number) + icode]
        return None, alignment[index][0]+1, alignment[index][1]

    pdb.renumber(renumber)

print(pdb, end='')
