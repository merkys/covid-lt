#!/usr/bin/Rscript --vanilla

library( "optparse" )
parser <- OptionParser()
parser <- add_option(parser, c( "-n", "--number" ), dest = "number", type = "double", default = 8)
parser <- add_option(parser, c( "--height" ), dest = "height", type = "double", default = NA)
parser <- add_option(parser, '--tab', action = "store_true", default = FALSE)
options = parse_args(parser, positional_arguments = TRUE)

clusters = options$args[1]
descriptions = options$args[2]

load(clusters)
descr = read.csv(descriptions, header=FALSE, sep="\t", quote="", as.is=TRUE)

tree = NULL
if( is.na(options$options$height) ) {
    tree = cutree(clust, k = options$options$number)
} else {
    tree = cutree(clust, h = options$options$height)
}

for (i in sort(unique(tree))) {
    cluster = tree[tree == i]
    pdb_ids = substr(labels(cluster), 2, 5)

    if( options$options$tab ) {
        cat( 'SIZE', i, length(cluster), sep="\t" )
        cat( "\n" )
        cat( 'INDICES', i, which(tree == i), sep="\t" )
        cat( "\n" )
        cat( 'LABELS', i, pdb_ids, sep="\t" )
        cat( "\n" )
    } else {
        cat( "Cluster", i, "size:", length(cluster), "\n" )
        cat( "----------------------------------------\n" )
        cat( pdb_ids, "\n\n" )

        for (pdb_id in pdb_ids) {
            if( pdb_id %in% descr[,1] ) {
                cat( paste( descr[descr[,1] == pdb_id,], sep=": " ), "\n" )
            }
        }

        cat( "\n" )
    }
}
