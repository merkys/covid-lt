#!/usr/bin/Rscript --vanilla

library( "optparse" )
parser <- OptionParser()
parser <- add_option(parser, c( "-n", "--number" ), dest = "number", type = "double", default = 8)
parser <- add_option(parser, c( "--height" ), dest = "height", type = "double", default = NA)
parser <- add_option(parser, '--tab', action = "store_true", default = FALSE)
parser <- add_option(parser, '--avgrmsd', action = "store_true", default = FALSE)
options = parse_args(parser, positional_arguments = TRUE)

clusters = options$args[1]
descriptions = options$args[2]

load(clusters)
descr = read.csv(descriptions, header=FALSE, sep="\t", quote="", as.is=TRUE)

tree = NULL
if( is.na(options$options$height) ) {
    tree = cutree(clust, k = options$options$number)
} else {
    tree = cutree(clust, h = options$options$height)
}

dist_matrix = as.matrix(distances)

for (i in sort(unique(tree))) {
    cluster = tree[tree == i]
    pdb_ids = substr(labels(cluster), 2, 5)

    original_ids = which(tree == i)
    inner_distances = vector(length=length(original_ids))
    for (j in 1:length(original_ids)) {
        inner_distances[j] = sum(dist_matrix[original_ids[j],original_ids])
    }
    dist_order = order(inner_distances)

    rmsd = NULL
    if( options$options$avgrmsd ) {
        rmsd = 0
        for (j in 1:length(cluster)) {
            for (k in 1:length(cluster)) {
                if( j >= k ) {
                    next
                }
                rmsd = rmsd +
                       as.double( system( paste0( 'echo align ', pdb_ids[j], ' and chain A, ', pdb_ids[k], ' and chain A ',
                                                  '| pymol -cp results/pdb/antibodies/complexes/', pdb_ids[j], '.pdb ',
                                                  '            results/pdb/antibodies/complexes/', pdb_ids[k], '.pdb 2>/dev/null ',
                                                  '| grep "^ Executive: RMSD" ',
                                                  '| awk "{print \\$4}"' ), intern = TRUE ) )
            }
        }
        rmsd = rmsd / ((length(cluster)^2 - length(cluster)) / 2)
    }

    if( options$options$tab ) {
        cat( 'SIZE', i, length(cluster), sep="\t" )
        cat( "\n" )
        cat( 'INDICES', i, which(tree == i), sep="\t" )
        cat( "\n" )
        cat( 'LABELS', i, pdb_ids, sep="\t" )
        cat( "\n" )
        cat( 'CENTROID', i, pdb_ids[dist_order[1]], inner_distances[dist_order[1]],
                            pdb_ids[dist_order[2]], inner_distances[dist_order[2]], sep="\t" )
        cat( "\n" )
        cat( 'RMSD', i, rmsd, sep="\t" )
        cat( "\n" )
    } else {
        cat( "Cluster", i, "size:", length(cluster), "\n" )
        cat( "----------------------------------------\n" )
        cat( pdb_ids, "\n\n" )

        for (pdb_id in pdb_ids) {
            if( pdb_id %in% descr[,1] ) {
                cat( paste( descr[descr[,1] == pdb_id,], sep=": " ), "\n" )
            }
        }

        cat( "\n" )
    }
}
